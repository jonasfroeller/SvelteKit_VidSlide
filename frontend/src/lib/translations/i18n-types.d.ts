// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType & DisallowNamespaces
export type BaseLocale = 'de'

export type Locales =
	| 'de'
	| 'en'

export type Translation = RootTranslation & DisallowNamespaces

export type Translations = RootTranslation &
{
	home: NamespaceHomeTranslation
}

type RootTranslation = {
	LangSelect: {
		/**
		 * S​p​r​a​c​h​e
		 */
		lang: string
	}
	ThemeSelect: {
		/**
		 * S​t​i​l
		 */
		theme: string
	}
	Sidebar: {
		/**
		 * S​t​a​r​t​s​e​i​t​e
		 */
		home: string
		/**
		 * S​u​c​h​e
		 */
		search: string
		/**
		 * K​o​n​t​o
		 */
		account: string
		/**
		 * E​i​n​s​t​e​l​l​u​n​g​e​n
		 */
		settings: string
	}
	Header: {
		/**
		 * A​n​m​e​l​d​e​n
		 */
		logIn: string
		/**
		 * A​b​m​e​l​d​e​n
		 */
		logOut: string
	}
	SignInUp: {
	}
	pages: {
		home: {
			video_info_display_actions: {
				/**
				 * K​o​m​m​e​n​t​a​r​e
				 */
				comments: string
				/**
				 * B​e​s​c​h​r​e​i​b​u​n​g
				 */
				description: string
			}
		}
		search: {
			video_search_bar: {
				/**
				 * S​u​c​h​e​n
				 */
				search: string
			}
		}
		account: {
		}
		settings: {
		}
	}
}

export type NamespaceHomeTranslation = {
	LangSelect: {
		lang: string
	}
	ThemeSelect: {
		theme: string
	}
	Sidebar: {
		home: string
		search: string
		account: string
		settings: string
	}
	Header: {
		logIn: string
		logOut: string
	}
	SignInUp: {
	}
	pages: {
		home: {
			video_info_display_actions: {
				comments: string
				description: string
			}
		}
		search: {
			video_search_bar: {
				search: string
			}
		}
		account: {
		}
		settings: {
		}
	}
}

export type Namespaces =
	| 'home'

type DisallowNamespaces = {
	/**
	 * reserved for 'home'-namespace\
	 * you need to use the `./home/index.ts` file instead
	 */
	home?: "[typesafe-i18n] reserved for 'home'-namespace. You need to use the `./home/index.ts` file instead."
}

export type TranslationFunctions = {
	LangSelect: {
		/**
		 * Sprache
		 */
		lang: () => LocalizedString
	}
	ThemeSelect: {
		/**
		 * Stil
		 */
		theme: () => LocalizedString
	}
	Sidebar: {
		/**
		 * Startseite
		 */
		home: () => LocalizedString
		/**
		 * Suche
		 */
		search: () => LocalizedString
		/**
		 * Konto
		 */
		account: () => LocalizedString
		/**
		 * Einstellungen
		 */
		settings: () => LocalizedString
	}
	Header: {
		/**
		 * Anmelden
		 */
		logIn: () => LocalizedString
		/**
		 * Abmelden
		 */
		logOut: () => LocalizedString
	}
	SignInUp: {
	}
	pages: {
		home: {
			video_info_display_actions: {
				/**
				 * Kommentare
				 */
				comments: () => LocalizedString
				/**
				 * Beschreibung
				 */
				description: () => LocalizedString
			}
		}
		search: {
			video_search_bar: {
				/**
				 * Suchen
				 */
				search: () => LocalizedString
			}
		}
		account: {
		}
		settings: {
		}
	}
	home: {
		LangSelect: {
			lang: () => LocalizedString
		}
		ThemeSelect: {
			theme: () => LocalizedString
		}
		Sidebar: {
			home: () => LocalizedString
			search: () => LocalizedString
			account: () => LocalizedString
			settings: () => LocalizedString
		}
		Header: {
			logIn: () => LocalizedString
			logOut: () => LocalizedString
		}
		SignInUp: {
		}
		pages: {
			home: {
				video_info_display_actions: {
					comments: () => LocalizedString
					description: () => LocalizedString
				}
			}
			search: {
				video_search_bar: {
					search: () => LocalizedString
				}
			}
			account: {
			}
			settings: {
			}
		}
	}
}

export type Formatters = {}
